---                                                                                                                     
- hosts: mineservers
  vars_files:
  - ./vars.yml
  gather_facts: no
  pre_tasks:
  - name: 'install python 2'
    raw: test -e /usr/bin/python || (apt -y update && apt install -y python)
  tasks:
  - name: Gathering facts
    setup:
  - name: Run apt-update
    apt:
      update_cache: yes

  - name: Install packages
    apt:
      name: "{{ packages }}"
    vars:
      packages:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg2
      - software-properties-common
      - python3-pip
      - python-pip
      - python-pkg-resources
      - python-setuptools
      - zip
      - unzip

  - name: Add docker key (Debian)
    apt_key:
      url: https://download.docker.com/linux/debian/gpg
      state: present
    when: ansible_distribution == 'Debian'

  - name: Add docker key (Ubuntu)
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present
    when: ansible_distribution == 'Ubuntu'

  - name: Add docker official repository for (Debian Stretch)
    apt_repository:
      repo: deb [arch=amd64] https://download.docker.com/linux/debian stretch stable
      state: present
    when: ansible_distribution == 'Debian'

  - name: Add docker offician repository (Ubuntu Bionic)
    apt_repository:
      repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable
      state: present
    when: ansible_distribution == 'Ubuntu'

  - name: Index new repo into the cache
    apt:
      name: "*"
      state: latest
      update_cache: yes
      force_apt_get: yes

  - name: Install docker
    apt:
      name: "{{ packages }}"
    vars:
      packages:
      - docker-ce
      - docker-ce-cli
      - containerd.io

  - name: Install docker-pip
    pip:
      name: 
      - setuptools
      - docker

  - name: Ensure group "docker" exists
    group:
      name: docker
      state: present

  - name: Add new user 'mine', who can access docker
    user:
      uid: "{{ user_uid }}"
      shell: /bin/bash
      name: mine
      append: yes
      create_home: true
      state: present

  - name: Create data directory
    file:
      path: /home/mine/data
      state: directory
      owner: mine

  - name: Create anisble tmp directory
    file:
      path: /home/mine/.ansible/tmp
      mode: "0700"
      state: directory
      owner: mine

  - name: Copy data
    copy:
      src: ./data/
      dest: /home/mine/data/
      owner: mine

  - name: Create world folder if not exists
    file:
      path: "{{ world_location }}"
      state: directory
      mode: '0777'
      recurse: yes
      owner: mine
      group: mine

  - name: Check if a provided world is a zip
    stat:
      path: /home/mine/data/world.zip
    register: world_is_zip

  - name: Unzip world if it was a zip
    unarchive:
      src: /home/mine/data/world.zip
      dest: "{{ world_location }}"
      remote_src: yes
      owner: mine
      group: mine
    when: world_is_zip.stat.exists

  - name: Set server type to curseforge if modpack url is provided
    set_fact:
      server_type: CURSEFORGE
    when: server_curse_forge_modpack != ""

  - name: Set server type to default if empty
    set_fact:
      server_type: VANILLA
    when: server_type is undefined

  - name: Start Minecraft
    docker_container:
      name: mc
      image: itzg/minecraft-server
      env: 
        EULA: "TRUE"
        SNOOPER_ENABLED: "FALSE"
        GUI: "FALSE"
        UID: "{{ user_uid }}"
        SERVER_PORT: "{{ server_port }}"
        MEMORY: "{{ server_memory }}"
        TYPE: "{{ server_type }}"
        VERSION: "{{ server_version }}"
        PVP: "{{ server_pvp }}"
        ONLINE_MODE: "{{ server_onlinemode }}"
        SERVER_NAME: "{{ server_name }}"
        DIFFICULTY: "{{ server_difficulty }}"
        ICON: "{{ server_icon }}"
        OPS: "{{ server_ops }}"
        ANNOUNCE_PLAYER_ACHIEVEMENTS: "{{ server_showachievements }}"
        MAX_PLAYERS: "{{ server_maxplayers }}"
        MOTD: "{{ server_motd }}"
        CF_SERVER_MOD: "{{ server_curse_forge_modpack }}"
      ports:
       - "{{ server_port }}:{{ server_port }}"
      volumes:
       - "/home/mine/data:/data"
    become_user: mine
